---
import "../styles/global.css";
import "leaflet/dist/leaflet.css";

import { getCollection } from "astro:content";

const postOffices = await getCollection("postOffices");
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <title>Caleb Visits Post Offices</title>
  </head>
  <body class="bg-zinc-900 text-zinc-300">
    <div
      id="map"
      class="h-screen w-screen"
      data-offices={JSON.stringify(postOffices.map((o) => o.data))}
    >
    </div>
  </body>
</html>

<script>
  import L from "leaflet";
  import type { CollectionEntry } from "astro:content";

  import icon from "leaflet/dist/images/marker-icon.png";
  import iconRetina from "leaflet/dist/images/marker-icon-2x.png";
  import shadow from "leaflet/dist/images/marker-shadow.png";

  var map = L.map("map").setView([39.5, -111.55], 7);
  L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
    maxZoom: 19,
    attribution:
      '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
  }).addTo(map);

  JSON.parse(document.getElementById("map").dataset.offices).forEach(
    (office: CollectionEntry<"postOffices">["data"]) => {
      const visited = office.visited === "true";

      L.marker([parseFloat(office.longitude), parseFloat(office.latitude)], {
        opacity: visited ? 1 : 0.4,
        zIndexOffset: visited ? 1000 : undefined,
        icon: L.icon({
          ...L.Icon.Default.prototype.options,
          iconUrl: icon.src,
          iconRetinaUrl: iconRetina.src,
          shadowUrl: shadow.src,
        }),
      })
        .bindPopup(
          `${office.name} (${visited ? "Visited!" : "Not yet visited"})`
        )
        .addTo(map);
    }
  );
</script>
